import{s as x,r as D,n as O}from"../chunks/scheduler.B-KQ0TV-.js";import{S as z,i as G,m as v,n as _,o as w,k as E,l as b,p as y,s as T,f as C,g as m,d as f,e as $,c as h,a as S,r as p,h as g,u as k,v as A,w as I,t as J,b as j,j as F}from"../chunks/index.BVfQ5-ZG.js";import{E as H,a as R,b as N}from"../chunks/EtudeCard.Bwv1eoGA.js";function K(o,e){if(o.length<=0||e>=o.length)return[];const t=[...o];for(t[e]=0,t.sort((n,r)=>r-n);t[t.length-1]===0;)t.pop();let s=0;for(let n=o[e];n>0;n--)s>t.length-1?t.push(1):t[s]+=1,s+=1;return t.sort((n,r)=>r-n)}function U(o){if(o.length===0)return[];const e=new Map;for(let t=0;t<o.length;t++){const s=K(o,t),n=JSON.stringify(s);e.has(n)||e.set(n,s)}return Array.from(e.values())}function V(o,e){if(o.length<1||e>=o.length)return[];const t=[...o];for(let s=e;s>=0;s--)t[s]-=1;return t.push(e+1),t.sort((s,n)=>n-s).filter(s=>s>0)}function W(o){const e=[],t=[];for(let s=0;s<o.length-1;s++)t.push(o[s]-o[s+1]);return t.push(o[o.length-1]),t.forEach((s,n)=>{s!==0&&e.push(V(o,n))}),e}function B(o){const e=new Map,t=new Map,s=new Map;let n=[...o];o.forEach(a=>{e.set(JSON.stringify(a),a)});let r="lose";for(;n.length>0;){const a=[];for(const l of n){const u=U(l);for(const i of u){const c=JSON.stringify(i),d=JSON.stringify(l);if(r==="lose")!t.has(c)&&c!==d&&(e.has(c)||(t.set(c,i),a.push(i)));else if(!e.has(c)&&c!==d&&!t.has(c)){let M=!1;const P=W(i);for(const q of P)if(!t.has(JSON.stringify(q))){s.set(c,i),M=!0;break}M||(e.set(c,i),a.push(i))}}}n=a,r=r==="lose"?"win":"lose"}return{win:t,lose:e,draw:s}}function Q(o){const e=[];let t=[];const s=o.trim().split(`
`);for(const n of s){const r=n.trim();r===""||r.startsWith("#")||(r.startsWith("-")?t.length>0&&(e.push(L(t)),t=[]):t.push(r))}return t.length>0&&e.push(L(t)),e}function L(o){const e=o[0].split(/\s+/).map(Number),t=o.slice(2).map(s=>s.split(/\s+/).map(Number).sort((n,r)=>r-n));return{base:e,targets:t}}function X(o){const e=B(o.targets),t=JSON.stringify(o.base);return e.win.has(t)?"WIN":e.lose.has(t)?"LOSE":"DRAW"}function Y(o){let e,t,s,n,r,a="Analyze Game",l,u;return{c(){e=$("div"),t=$("textarea"),s=T(),n=$("div"),r=$("button"),r.textContent=a,this.h()},l(i){e=h(i,"DIV",{class:!0});var c=S(e);t=h(c,"TEXTAREA",{class:!0,placeholder:!0,rows:!0,spellcheck:!0}),S(t).forEach(f),s=C(c),n=h(c,"DIV",{class:!0});var d=S(n);r=h(d,"BUTTON",{class:!0,"data-svelte-h":!0}),k(r)!=="svelte-1ri5yw0"&&(r.textContent=a),d.forEach(f),c.forEach(f),this.h()},h(){p(t,"class","input-field svelte-1dffrif"),p(t,"placeholder","Enter starting position and target positions..."),p(t,"rows","10"),p(t,"spellcheck","false"),p(r,"class","game-button svelte-1dffrif"),p(n,"class","button-container svelte-1dffrif"),p(e,"class","control-section svelte-1dffrif")},m(i,c){m(i,e,c),g(e,t),A(t,o[0]),g(e,s),g(e,n),g(n,r),l||(u=[I(t,"input",o[3]),I(r,"click",o[2])],l=!0)},p(i,c){c&1&&A(t,i[0])},d(i){i&&f(e),l=!1,D(u)}}}function Z(o){let e,t;return{c(){e=$("pre"),t=J(o[1]),this.h()},l(s){e=h(s,"PRE",{class:!0});var n=S(e);t=j(n,o[1]),n.forEach(f),this.h()},h(){p(e,"class","etude-pre")},m(s,n){m(s,e,n),g(e,t)},p(s,n){n&2&&F(t,s[1])},d(s){s&&f(e)}}}function ee(o){let e,t,s,n,r;return t=new N({props:{title:"Input",$$slots:{default:[Y]},$$scope:{ctx:o}}}),n=new N({props:{title:"Result",$$slots:{default:[Z]},$$scope:{ctx:o}}}),{c(){e=$("div"),v(t.$$.fragment),s=T(),v(n.$$.fragment),this.h()},l(a){e=h(a,"DIV",{class:!0});var l=S(e);_(t.$$.fragment,l),s=C(l),_(n.$$.fragment,l),l.forEach(f),this.h()},h(){p(e,"class","etude-grid")},m(a,l){m(a,e,l),w(t,e,null),g(e,s),w(n,e,null),r=!0},p(a,l){const u={};l&17&&(u.$$scope={dirty:l,ctx:a}),t.$set(u);const i={};l&18&&(i.$$scope={dirty:l,ctx:a}),n.$set(i)},i(a){r||(E(t.$$.fragment,a),E(n.$$.fragment,a),r=!0)},o(a){b(t.$$.fragment,a),b(n.$$.fragment,a),r=!1},d(a){a&&f(e),y(t),y(n)}}}function te(o){let e,t=`2 1     # Starting position
3       # Empty line separator
        # Target positions below`,s,n,r="<li>First line: Starting position</li> <li>Blank line separator</li> <li>Remaining lines: Target positions</li> <li>Use &quot;---&quot; to separate scenarios</li>";return{c(){e=$("pre"),e.textContent=t,s=T(),n=$("ul"),n.innerHTML=r,this.h()},l(a){e=h(a,"PRE",{class:!0,"data-svelte-h":!0}),k(e)!=="svelte-gqgk0g"&&(e.textContent=t),s=C(a),n=h(a,"UL",{class:!0,"data-svelte-h":!0}),k(n)!=="svelte-46voqe"&&(n.innerHTML=r),this.h()},h(){p(e,"class","etude-pre"),p(n,"class","etude-list")},m(a,l){m(a,e,l),m(a,s,l),m(a,n,l)},p:O,d(a){a&&(f(e),f(s),f(n))}}}function se(o){let e,t="<li>Two players take turns making moves</li> <li>A move converts a column into a row</li> <li>First to reach a target position wins</li> <li>Game is drawn if neither can force a win</li> <li>Analysis assumes optimal play by both players</li>";return{c(){e=$("ul"),e.innerHTML=t,this.h()},l(s){e=h(s,"UL",{class:!0,"data-svelte-h":!0}),k(e)!=="svelte-12zdbea"&&(e.innerHTML=t),this.h()},h(){p(e,"class","etude-list")},m(s,n){m(s,e,n)},p:O,d(s){s&&f(e)}}}function ne(o){let e,t,s,n,r;return t=new N({props:{title:"Input Format",$$slots:{default:[te]},$$scope:{ctx:o}}}),n=new N({props:{title:"Game Rules",$$slots:{default:[se]},$$scope:{ctx:o}}}),{c(){e=$("div"),v(t.$$.fragment),s=T(),v(n.$$.fragment),this.h()},l(a){e=h(a,"DIV",{class:!0});var l=S(e);_(t.$$.fragment,l),s=C(l),_(n.$$.fragment,l),l.forEach(f),this.h()},h(){p(e,"class","etude-grid")},m(a,l){m(a,e,l),w(t,e,null),g(e,s),w(n,e,null),r=!0},p(a,l){const u={};l&16&&(u.$$scope={dirty:l,ctx:a}),t.$set(u);const i={};l&16&&(i.$$scope={dirty:l,ctx:a}),n.$set(i)},i(a){r||(E(t.$$.fragment,a),E(n.$$.fragment,a),r=!0)},o(a){b(t.$$.fragment,a),b(n.$$.fragment,a),r=!1},d(a){a&&f(e),y(t),y(n)}}}function re(o){let e,t,s,n;return e=new R({props:{title:"Game Analysis",$$slots:{default:[ee]},$$scope:{ctx:o}}}),s=new R({props:{title:"Guide",$$slots:{default:[ne]},$$scope:{ctx:o}}}),{c(){v(e.$$.fragment),t=T(),v(s.$$.fragment)},l(r){_(e.$$.fragment,r),t=C(r),_(s.$$.fragment,r)},m(r,a){w(e,r,a),m(r,t,a),w(s,r,a),n=!0},p(r,a){const l={};a&19&&(l.$$scope={dirty:a,ctx:r}),e.$set(l);const u={};a&16&&(u.$$scope={dirty:a,ctx:r}),s.$set(u)},i(r){n||(E(e.$$.fragment,r),E(s.$$.fragment,r),n=!0)},o(r){b(e.$$.fragment,r),b(s.$$.fragment,r),n=!1},d(r){r&&f(t),y(e,r),y(s,r)}}}function ae(o){let e,t;return e=new H({props:{title:"Playing Partitions",description:"Analyze a two-player game involving Ferrers boards and target positions to determine the outcome (win, lose, or draw) from a given starting position.",$$slots:{default:[re]},$$scope:{ctx:o}}}),{c(){v(e.$$.fragment)},l(s){_(e.$$.fragment,s)},m(s,n){w(e,s,n),t=!0},p(s,[n]){const r={};n&19&&(r.$$scope={dirty:n,ctx:s}),e.$set(r)},i(s){t||(E(e.$$.fragment,s),t=!0)},o(s){b(e.$$.fragment,s),t=!1},d(s){y(e,s)}}}function oe(o,e,t){let s=`2 1
3
---
3 2 1
2 2 1 1`,n="";function r(){try{const l=Q(s),u=[];l.forEach((i,c)=>{u.push(i.base.join(" ")),u.push(""),i.targets.forEach(M=>{u.push(M.join(" "))});const d=X(i);u.push(`# ${d}`),c<l.length-1&&u.push("---")}),t(1,n=u.join(`
`))}catch{t(1,n="Error: Invalid input format")}}function a(){s=this.value,t(0,s)}return[s,n,r,a]}class ce extends z{constructor(e){super(),G(this,e,oe,ae,x,{})}}export{ce as component};
